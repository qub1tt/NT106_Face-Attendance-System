# Form implementation generated from reading ui file '.\changePass.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from confirmOTP import Ui_OTP
from newpass import Ui_ChangePass

import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import random

import bcrypt
import firebase_admin
from firebase_admin import credentials
from firebase_admin import db
from firebase_admin import storage


cred = credentials.Certificate("ServiceAccountKey.json")

firebase_admin.initialize_app(cred, {"databaseURL":"https://faceregconition-80c55-default-rtdb.firebaseio.com/",
                                     
                                     "storageBucket":"faceregconition-80c55.appspot.com"})

ref = db.reference("Admin")
passw = ref.child("Password").get().encode("utf-8")

class OTPSender:
    def __init__(self):
        self.email_address = "duyhoangnguyen1711@gmail.com"  # Thay đổi thành địa chỉ email của bạn
        self.email_password = "mlyy pxzo mbwf ansb"  # Thay đổi thành mật khẩu email của bạn

    def generate_otp(self):
        otp = ''.join(random.choices('0123456789', k=6))  # Tạo mã OTP 6 chữ số ngẫu nhiên
        return otp

    def send_otp_email(self, receiver_email, otp):
        msg = MIMEMultipart()
        msg['From'] = self.email_address
        msg['To'] = receiver_email
        msg['Subject'] = "OTP for Password Reset"
        body = f"Your OTP is: {otp}"
        msg.attach(MIMEText(body, 'plain'))

        try:
            with smtplib.SMTP('smtp.gmail.com', 587) as server:
                server.starttls()
                server.login(self.email_address, self.email_password)
                server.send_message(msg)
            print("OTP email sent successfully!")
        except Exception as e:
            print(f"Error sending OTP email: {e}")


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(435, 547)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(20, 10, 401, 500))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(parent=self.widget)
        self.label.setGeometry(QtCore.QRect(0, -80, 400, 581))
        self.label.setStyleSheet("background-color:rgb(165,213,255);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.widget)
        self.label_2.setGeometry(QtCore.QRect(30, 40, 340, 39))
        font = QtGui.QFont()
        font.setFamily("Imprint MT Shadow")
        font.setPointSize(20)
        font.setBold(False)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:black;\n"
"")
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.leUser = QtWidgets.QLineEdit(parent=self.widget)
        self.leUser.setGeometry(QtCore.QRect(60, 160, 310, 50))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.leUser.setFont(font)
        self.leUser.setStyleSheet("background-color:rgba(255,255,255,255);\n"
"border:none;\n"
"border-bottom:2px solid rgba(46,82,101,200);\n"
"color:rgba(0,0,0,240);\n"
"padding-bottom:7px;")
        self.leUser.setAlignment(QtCore.Qt.AlignmentFlag.AlignBottom|QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft)
        self.leUser.setObjectName("leUser")
        self.btnLogin = QtWidgets.QPushButton(parent=self.widget)
        self.btnLogin.setGeometry(QtCore.QRect(20, 280, 360, 60))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(14)
        font.setBold(True)
        self.btnLogin.setFont(font)
        self.btnLogin.setStyleSheet("QPushButton#btnLogin{\n"
"    background-color:qlineargradient(spread:pad,x1:0, y1:0.505682, x2:1,y2:0.477, stop:0 rgba(11,131,120,219), stop:1 rgba(85,98,112,226));\n"
"   color:rgba(255,255,255,210);\n"
"border-radius:10px;\n"
"}    \n"
"QPushButton#btnLogin:hover{\n"
"    background-color:qlineargradient(spread:pad,x1:0, y1:0.505682, x2:1,y2:0.477, stop:0 rgba(150,123,111,219), stop:1 rgba(85,81,84,226));\n"
"  \n"
"}    \n"
"\n"
"QPushButton#btnLogin:pressed{\n"
"    padding-left:5px;\n"
"padding-top:5px;\n"
"background-color:rgba(150,123,111,255);\n"
"\n"
"}    \n"
"\n"
"")
        self.btnLogin.setObjectName("btnLogin")
        self.label_4 = QtWidgets.QLabel(parent=self.widget)
        self.label_4.setGeometry(QtCore.QRect(10, 160, 50, 50))
        self.label_4.setStyleSheet("background-color:rgb(76,198,198)")
        self.label_4.setLineWidth(1)
        self.label_4.setText("")
        self.label_4.setTextFormat(QtCore.Qt.TextFormat.PlainText)
        self.label_4.setPixmap(QtGui.QPixmap(r"Interface\Png\Icon\user.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.label_6 = QtWidgets.QLabel(parent=self.widget)
        self.label_6.setGeometry(QtCore.QRect(10, 160, 360, 50))
        self.label_6.setStyleSheet("background-color:white;\n"
"")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.label_8 = QtWidgets.QLabel(parent=self.widget)
        self.label_8.setGeometry(QtCore.QRect(20, 270, 360, 50))
        self.label_8.setStyleSheet("background-color:white;")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.widget)
        self.label_9.setGeometry(QtCore.QRect(20, 280, 360, 50))
        self.label_9.setStyleSheet("background-color:white;\n"
"")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.label_9.raise_()
        self.label_8.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.btnLogin.raise_()
        self.label_6.raise_()
        self.label_4.raise_()
        self.leUser.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "Forgot Password"))
        self.leUser.setPlaceholderText(_translate("MainWindow", "Enter your Email"))
        self.btnLogin.setText(_translate("MainWindow", "Send OTP"))

        self.btnLogin.clicked.connect(self.sendOTP)

    def sendOTP(self):
        # Tạo một đối tượng mới từ class Ui_OTP
        email_address = self.leUser.text().strip()  # Lấy địa chỉ email từ QLineEdit và loại bỏ khoảng trắng thừa
    
        # Kiểm tra email có đúng không
        if email_address != "dotayto08062004@gmail.com": #thay email nhận otp của gv vao day
            QtWidgets.QMessageBox.warning(MainWindow, "Warning", "Hãy nhập đúng email của bạn")
            return
        # Tạo một đối tượng mới từ class Ui_OTP
        self.otp_window = Ui_OTP()
        self.otp_window.setupUi(MainWindow)
        MainWindow.show()

        # Gửi OTP qua email
        email_address = self.leUser.text() # Địa chỉ email của người dùng
        otp_sender = OTPSender()
        otp = otp_sender.generate_otp()
        otp_sender.send_otp_email(email_address, otp)
        
        self.otp_window.btnLogin.clicked.connect(lambda: self.confirmOTP(MainWindow, otp))

    def confirmOTP(self,MainWindow,generated_otp):
        # Lấy mã OTP từ QLineEdit
        entered_otp = self.otp_window.leUser.text()

        # So sánh mã OTP nhập vào với mã OTP được tạo ra
        if entered_otp == generated_otp:  # Thay `generated_otp` bằng mã OTP đã được tạo ra
            QtWidgets.QMessageBox.information(MainWindow, "Success", "OTP verified successfully!")
            self.show_newpass_window()
        else:
            QtWidgets.QMessageBox.warning(MainWindow, "Warning", "OTP does not match. Please try again.")


    def show_newpass_window(self):
        # Hiển thị cửa sổ newpass
        self.newpass_window = Ui_ChangePass()
        self.newpass_window.setupUi(MainWindow)
        MainWindow.show()
        self.newpass_window.btnLogin.clicked.connect(self.change_password_function)

    def change_password_function(self):
        new_password = self.newpass_window.leUser_2.text()
        
        try:
            hashed_new = bcrypt.hashpw(new_password.encode('utf-8'), bcrypt.gensalt())
            ref.update({"Password": hashed_new.decode()})
            QtWidgets.QMessageBox.information(MainWindow, "Success", "Password updated successfully!")
        except Exception as e:
            QtWidgets.QMessageBox.critical(MainWindow, "Error", e)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())